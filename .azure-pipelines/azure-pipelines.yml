trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

resources:
  containers:
  - container: mariadb
    image: mariadb:10.5
    env:
      MYSQL_DATABASE: ispybtest
      MYSQL_ROOT_PASSWORD: mysql_root_pwd
    ports:
    - 3306:3306

stages:
- stage: static
  displayName: Static Analysis
  jobs:
  - job: checks
    displayName: static code analysis
    pool:
      vmImage: ubuntu-20.04
    steps:
      # Use Python >=3.7 for syntax validation
      - task: UsePythonVersion@0
        displayName: Set up python
        inputs:
          versionSpec: 3.7

      # Run syntax validation on a shallow clone
      - bash: |
          python .azure-pipelines/syntax-validation.py
        displayName: Syntax validation

      # Run flake8 validation on a shallow clone
      - bash: |
          pip install flake8
          python .azure-pipelines/flake8-validation.py
        displayName: Flake8 validation

- stage: build
  displayName: Build
  dependsOn:
  jobs:
  - job: build
    displayName: build package
    pool:
      vmImage: ubuntu-20.04
    steps:
      - task: UsePythonVersion@0
        displayName: Set up python
        inputs:
          versionSpec: 3.9

      - bash: |
          pip install -U pip
          pip install collective.checkdocs wheel
        displayName: Install dependencies

      - bash: |
          set -ex
          python setup.py sdist bdist_wheel
          mkdir -p dist/pypi
          shopt -s extglob
          mv -v dist/!(pypi) dist/pypi
          git archive HEAD | gzip > dist/repo-source.tar.gz
          ls -laR dist
        displayName: Build python package

      - bash: |
          wget -t 3 --waitretry=20 https://github.com/DiamondLightSource/ispyb-database/releases/download/v1.18.1/ispyb-database-1.18.1.tar.gz -O dist/ispyb-database.tar.gz
        displayName: Download ISPyB DB schema for tests

      - task: PublishBuildArtifacts@1
        displayName: Store artifact
        inputs:
          pathToPublish: dist/
          artifactName: package

      - bash: python setup.py checkdocs
        displayName: Check package description

- stage: tests
  displayName: Run unit tests
  dependsOn:
  - static
  - build
  jobs:
  - job: linux
    pool:
      vmImage: ubuntu-20.04
    strategy:
      matrix:
        python36:
          PYTHON_VERSION: 3.6
        python37:
          PYTHON_VERSION: 3.7
        python38:
          PYTHON_VERSION: 3.8
#        python39:
#          PYTHON_VERSION: 3.9
    services:
      db: mariadb
    steps:
    - template: ci.yml

- stage: deploy
  displayName: Publish release
  dependsOn:
  - tests
  - static
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  jobs:
  - job: pypi
    displayName: Publish pypi release
    pool:
      vmImage: ubuntu-20.04
    steps:
      - checkout: none

      - task: UsePythonVersion@0
        displayName: Set up python
        inputs:
          versionSpec: 3.8

      - task: DownloadBuildArtifacts@0
        displayName: Get pre-built package
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'package'
          downloadPath: '$(System.ArtifactsDirectory)'

      - script: |
          pip install -U pip
          pip install twine
        displayName: Install twine

      - task: TwineAuthenticate@1
        displayName: Set up credentials
        inputs:
          pythonUploadServiceConnection: pypi-ispyb

      - bash: |
          python -m twine upload -r pypi-ispyb --config-file $(PYPIRC_PATH) $(System.ArtifactsDirectory)/package/pypi/*.tar.gz $(System.ArtifactsDirectory)/package/pypi/*.whl
        displayName: Publish package
